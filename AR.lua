local v0=string.char;local v1=string.byte;local v2=string.sub;local v3=bit32 or bit ;local v4=v3.bxor;local v5=table.concat;local v6=table.insert;local function v7(v24,v25) local v26={};for v41=1, #v24 do v6(v26,v0(v4(v1(v2(v24,v41,v41 + 1 )),v1(v2(v25,1 + (v41% #v25) ,1 + (v41% #v25) + 1 )))%256 ));end return v5(v26);end local v8=tonumber;local v9=string.byte;local v10=string.char;local v11=string.sub;local v12=string.gsub;local v13=string.rep;local v14=table.concat;local v15=table.insert;local v16=math.ldexp;local v17=getfenv or function() return _ENV;end ;local v18=setmetatable;local v19=pcall;local v20=select;local v21=unpack or table.unpack ;local v22=tonumber;local function v23(v27,v28,...) local v29=1;local v30;v27=v12(v11(v27,5),v7("\233\137","\224\199\167\155\55\18\178"),function(v42) if (v9(v42,2)==81) then v30=v8(v11(v42,1,2 -1 ));return "";else local v94=0;local v95;while true do if (v94==0) then v95=v10(v8(v42,16));if v30 then local v118=v13(v95,v30);v30=nil;return v118;else return v95;end break;end end end end);local function v31(v43,v44,v45) if v45 then local v96=0;local v97;while true do if (0==v96) then v97=(v43/(2^(v44-(2 -1))))%(2^(((v45-1) -(v44-1)) + 1)) ;return v97-(v97%1) ;end end else local v98=0;local v99;while true do if (0==v98) then v99=2^(v44-1) ;return (((v43%(v99 + v99))>=v99) and 1) or 0 ;end end end end local function v32() local v46=v9(v27,v29,v29);v29=v29 + 1 ;return v46;end local function v33() local v47=0;local v48;local v49;while true do if (v47==1) then return (v49 * 256) + v48 ;end if (v47==0) then v48,v49=v9(v27,v29,v29 + 2 );v29=v29 + 2 ;v47=1;end end end local function v34() local v50=0;local v51;local v52;local v53;local v54;while true do if (1==v50) then return (v54 * 16777216) + (v53 * 65536) + (v52 * 256) + v51 ;end if (v50==0) then v51,v52,v53,v54=v9(v27,v29,v29 + 3 );v29=v29 + 4 ;v50=1;end end end local function v35() local v55=0;local v56;local v57;local v58;local v59;local v60;local v61;while true do if (v55==0) then v56=v34();v57=v34();v55=1;end if (v55==3) then if (v60==0) then if (v59==0) then return v61 * 0 ;else v60=1;v58=0;end elseif (v60==2047) then return ((v59==0) and (v61 * (1/0))) or (v61 * NaN) ;end return v16(v61,v60-(1954 -(857 + 74)) ) * (v58 + (v59/(2^52))) ;end if (v55==1) then v58=1;v59=(v31(v57,1,20) * (2^32)) + v56 ;v55=2;end if (v55==2) then v60=v31(v57,21,31);v61=((v31(v57,61 -29 )==(2 -1)) and  -(620 -(555 + 64))) or 1 ;v55=3;end end end local function v36(v62) local v63;if  not v62 then v62=v34();if (v62==0) then return "";end end v63=v11(v27,v29,(v29 + v62) -1 );v29=v29 + v62 ;local v64={};for v78=569 -(367 + 201) , #v63 do v64[v78]=v10(v9(v11(v63,v78,v78)));end return v14(v64);end local v37=v34;local function v38(...) return {...},v20("#",...);end local function v39() local v65=0;local v66;local v67;local v68;local v69;local v70;local v71;while true do if (v65==1) then v70=v34();v71={};for v103=1,v70 do local v104=v32();local v105;if (v104==1) then v105=v32()~=0 ;elseif (v104==2) then v105=v35();elseif (v104==3) then v105=v36();end v71[v103]=v105;end v69[3]=v32();v65=2;end if (v65==2) then for v107=1 + 0 ,v34() do local v108=0;local v109;while true do if (v108==0) then v109=v32();if (v31(v109,1,1)==0) then local v119=0;local v120;local v121;local v122;while true do if (v119==1) then v122={v33(),v33(),nil,nil};if (v120==(1637 -(1523 + 114))) then local v124=0;while true do if (v124==0) then v122[3 + 0 ]=v33();v122[4]=v33();break;end end elseif (v120==(1 -0)) then v122[3]=v34();elseif (v120==2) then v122[3]=v34() -(2^16) ;elseif (v120==3) then local v334=0;while true do if (v334==0) then v122[3]=v34() -(2^(1081 -(68 + 997))) ;v122[4]=v33();break;end end end v119=2;end if (v119==2) then if (v31(v121,1,1271 -(226 + 1044) )==1) then v122[2]=v71[v122[2]];end if (v31(v121,2,2)==1) then v122[3]=v71[v122[3]];end v119=3;end if (v119==3) then if (v31(v121,3,3)==1) then v122[4]=v71[v122[4]];end v66[v107]=v122;break;end if (v119==0) then v120=v31(v109,2,3);v121=v31(v109,4,6);v119=1;end end end break;end end end for v110=1,v34() do v67[v110-1 ]=v39();end return v69;end if (v65==0) then v66={};v67={};v68={};v69={v66,v67,nil,v68};v65=1;end end end local function v40(v72,v73,v74) local v75=v72[1];local v76=v72[2];local v77=v72[3];return function(...) local v80=v75;local v81=v76;local v82=v77;local v83=v38;local v84=1;local v85= -1;local v86={};local v87={...};local v88=v20("#",...) -1 ;local v89={};local v90={};for v100=0,v88 do if (v100>=v82) then v86[v100-v82 ]=v87[v100 + 1 ];else v90[v100]=v87[v100 + 1 ];end end local v91=(v88-v82) + (4 -3) ;local v92;local v93;while true do local v101=0;while true do if (1==v101) then if (v93<=48) then if (v93<=23) then if (v93<=11) then if (v93<=5) then if (v93<=2) then if (v93<=(117 -(32 + 85))) then local v134=0;local v135;local v136;local v137;while true do if (v134==0) then v135=v92[2];v136=v90[v135];v134=1;end if (v134==1) then v137=v90[v135 + 2 ];if (v137>0) then if (v136>v90[v135 + 1 ]) then v84=v92[3 + 0 ];else v90[v135 + 3 ]=v136;end elseif (v136<v90[v135 + 1 ]) then v84=v92[3];else v90[v135 + 3 ]=v136;end break;end end elseif (v93==(1 + 0)) then local v200=v92[959 -(892 + 65) ];v90[v200]=v90[v200](v21(v90,v200 + 1 ,v92[7 -4 ]));else local v202=0;local v203;while true do if (0==v202) then v203=v92[3 -1 ];do return v90[v203](v21(v90,v203 + (1 -0) ,v92[3]));end break;end end end elseif (v93<=(353 -(87 + 263))) then local v138=0;local v139;while true do if (v138==0) then v139=v92[2];do return v90[v139](v21(v90,v139 + (181 -(67 + 113)) ,v92[3]));end break;end end elseif (v93>4) then local v204=0;local v205;while true do if (v204==0) then v205=v92[2];v90[v205]=v90[v205](v21(v90,v205 + 1 ,v85));break;end end else local v206=0;local v207;local v208;local v209;while true do if (v206==1) then v209={};v208=v18({},{[v7("\3\251\115\130\249\73\235","\147\92\164\26\236\157\44")]=function(v415,v416) local v417=0;local v418;while true do if (v417==0) then v418=v209[v416];return v418[1][v418[2]];end end end,[v7("\115\112\85\47\5\69\65\95\47\10","\114\44\47\59\74")]=function(v419,v420,v421) local v422=v209[v420];v422[1][v422[2]]=v421;end});v206=2;end if (v206==2) then for v424=1,v92[4] do local v425=0;local v426;while true do if (v425==0) then v84=v84 + 1 + 0 ;v426=v80[v84];v425=1;end if (v425==1) then if (v426[1]==72) then v209[v424-1 ]={v90,v426[3]};else v209[v424-1 ]={v73,v426[3]};end v89[ #v89 + 1 ]=v209;break;end end end v90[v92[2]]=v40(v207,v208,v74);break;end if (0==v206) then v207=v81[v92[3]];v208=nil;v206=1;end end end elseif (v93<=8) then if (v93<=6) then local v140=0;local v141;while true do if (v140==0) then v141=v92[2];v90[v141]=v90[v141]();break;end end elseif (v93>7) then local v210=v92[4 -2 ];v90[v210]=v90[v210](v90[v210 + 1 ]);else v90[v92[2]]=v90[v92[3]][v92[4]];end elseif (v93<=9) then local v142=v92[2];local v143,v144=v83(v90[v142](v21(v90,v142 + 1 ,v92[3])));v85=(v144 + v142) -1 ;local v145=0 + 0 ;for v195=v142,v85 do local v196=0;while true do if (v196==0) then v145=v145 + 1 ;v90[v195]=v143[v145];break;end end end elseif (v93==10) then v90[v92[7 -5 ]]=v74[v92[3]];else v90[v92[2]][v90[v92[3]]]=v90[v92[4]];end elseif (v93<=17) then if (v93<=14) then if (v93<=12) then local v146=v92[3];local v147=v90[v146];for v197=v146 + 1 ,v92[4] do v147=v147   .. v90[v197] ;end v90[v92[2]]=v147;elseif (v93>13) then if (v90[v92[2]]==v92[4]) then v84=v84 + (953 -(802 + 150)) ;else v84=v92[3];end else local v218=0;local v219;local v220;local v221;local v222;while true do if (v218==1) then v85=(v221 + v219) -1 ;v222=0;v218=2;end if (v218==0) then v219=v92[2];v220,v221=v83(v90[v219](v21(v90,v219 + 1 ,v92[7 -4 ])));v218=1;end if (v218==2) then for v427=v219,v85 do local v428=0;while true do if (0==v428) then v222=v222 + 1 ;v90[v427]=v220[v222];break;end end end break;end end end elseif (v93<=15) then v90[v92[3 -1 ]]=v40(v81[v92[3 + 0 ]],nil,v74);elseif (v93>16) then local v223=v92[999 -(915 + 82) ];local v224=v92[4];local v225=v223 + 2 ;local v226={v90[v223](v90[v223 + 1 ],v90[v225])};for v341=1,v224 do v90[v225 + v341 ]=v226[v341];end local v227=v226[2 -1 ];if v227 then v90[v225]=v227;v84=v92[3];else v84=v84 + 1 ;end else v90[v92[2]]=v90[v92[3]]%v90[v92[4]] ;end elseif (v93<=20) then if (v93<=18) then local v150=0;local v151;while true do if (v150==0) then v151=v92[2];v90[v151]=v90[v151]();break;end end elseif (v93==(12 + 7)) then local v229=v92[2];v90[v229]=v90[v229](v90[v229 + 1 ]);else local v231=0;local v232;while true do if (v231==0) then v232=v92[2 -0 ];do return v21(v90,v232,v85);end break;end end end elseif (v93<=21) then v90[v92[2]]=v74[v92[3]];elseif (v93==22) then local v233=0;local v234;while true do if (0==v233) then v234=v92[2];v90[v234](v21(v90,v234 + 1 ,v85));break;end end else v90[v92[2]]=v90[v92[3]][v90[v92[4]]];end elseif (v93<=35) then if (v93<=29) then if (v93<=26) then if (v93<=24) then local v154=v92[2];v90[v154]=v90[v154](v21(v90,v154 + (1188 -(1069 + 118)) ,v92[3]));elseif (v93==25) then local v237=0;local v238;while true do if (v237==0) then v238=v92[2];v90[v238](v21(v90,v238 + 1 ,v92[6 -3 ]));break;end end else v90[v92[2]][v92[3]]=v90[v92[4]];end elseif (v93<=27) then v90[v92[2]]=v92[3];elseif (v93==28) then local v241=0;local v242;local v243;local v244;local v245;while true do if (2==v241) then for v429=v242,v85 do v245=v245 + 1 + 0 ;v90[v429]=v243[v245];end break;end if (v241==0) then v242=v92[2];v243,v244=v83(v90[v242](v90[v242 + 1 ]));v241=1;end if (1==v241) then v85=(v244 + v242) -(1 -0) ;v245=0;v241=2;end end else v90[v92[2]]=v92[3] + v90[v92[6 -2 ]] ;end elseif (v93<=32) then if (v93<=30) then v90[v92[2]]=v90[v92[3]] + v92[4 + 0 ] ;elseif (v93==31) then v90[v92[2]]=v90[v92[3]] + v92[795 -(368 + 423) ] ;else v90[v92[2]]=v73[v92[3]];end elseif (v93<=(103 -70)) then do return v90[v92[2]]();end elseif (v93>34) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v250=0;local v251;local v252;local v253;local v254;while true do if (2==v250) then for v432=v251,v85 do local v433=0;while true do if (v433==0) then v254=v254 + 1 ;v90[v432]=v252[v254];break;end end end break;end if (v250==0) then v251=v92[2];v252,v253=v83(v90[v251](v21(v90,v251 + 1 ,v85)));v250=1;end if (1==v250) then v85=(v253 + v251) -(19 -(10 + 8)) ;v254=0;v250=2;end end end elseif (v93<=41) then if (v93<=38) then if (v93<=36) then v90[v92[2]][v90[v92[11 -8 ]]]=v92[4];elseif (v93>37) then local v255=v92[2];v90[v255](v21(v90,v255 + 1 ,v92[3]));else local v256=v92[2];local v257=v92[4];local v258=v256 + 2 ;local v259={v90[v256](v90[v256 + 1 ],v90[v258])};for v346=443 -(416 + 26) ,v257 do v90[v258 + v346 ]=v259[v346];end local v260=v259[1];if v260 then v90[v258]=v260;v84=v92[3];else v84=v84 + 1 ;end end elseif (v93<=39) then v90[v92[2]][v92[3]]=v92[4];elseif (v93==40) then v90[v92[2]]();else v90[v92[2]]=v40(v81[v92[3]],nil,v74);end elseif (v93<=(140 -96)) then if (v93<=42) then local v163=0;local v164;local v165;local v166;while true do if (v163==1) then v166=0;for v378=v164,v92[4] do local v379=0;while true do if (v379==0) then v166=v166 + 1 ;v90[v378]=v165[v166];break;end end end break;end if (v163==0) then v164=v92[2];v165={v90[v164](v90[v164 + 1 ])};v163=1;end end elseif (v93==43) then for v350=v92[2],v92[3] do v90[v350]=nil;end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=(20 + 26)) then if (v93==45) then local v262=v92[2];local v263=v90[v262];for v352=v262 + 1 ,v85 do v15(v263,v90[v352]);end else v90[v92[3 -1 ]]=v90[v92[3]][v92[4]];end elseif (v93==(485 -(145 + 293))) then v90[v92[2]][v92[3]]=v92[434 -(44 + 386) ];else local v268=0;local v269;local v270;while true do if (1==v268) then for v434=1, #v89 do local v435=0;local v436;while true do if (v435==0) then v436=v89[v434];for v483=0, #v436 do local v484=v436[v483];local v485=v484[1];local v486=v484[2];if ((v485==v90) and (v486>=v269)) then local v492=0;while true do if (v492==0) then v270[v486]=v485[v486];v484[1]=v270;break;end end end end break;end end end break;end if (v268==0) then v269=v92[2];v270={};v268=1;end end end elseif (v93<=72) then if (v93<=60) then if (v93<=54) then if (v93<=51) then if (v93<=49) then v74[v92[3]]=v90[v92[2]];elseif (v93>50) then do return;end else v84=v92[3];end elseif (v93<=52) then if (v92[1488 -(998 + 488) ]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end elseif (v93==53) then if (v90[v92[2]]==v92[4]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]][v90[v92[3]]]=v92[4];end elseif (v93<=57) then if (v93<=55) then v90[v92[1 + 1 ]][v90[v92[3 + 0 ]]]=v90[v92[4]];elseif (v93==(828 -(201 + 571))) then local v275=v92[2];v90[v275](v90[v275 + 1 ]);else v90[v92[2]]= #v90[v92[1141 -(116 + 1022) ]];end elseif (v93<=58) then v90[v92[8 -6 ]]={};elseif (v93>59) then local v277=v92[2];local v278=v90[v277 + 2 ];local v279=v90[v277] + v278 ;v90[v277]=v279;if (v278>0) then if (v279<=v90[v277 + 1 ]) then local v437=0;while true do if (v437==0) then v84=v92[3];v90[v277 + 3 ]=v279;break;end end end elseif (v279>=v90[v277 + 1 ]) then local v438=0;while true do if (0==v438) then v84=v92[3];v90[v277 + 3 ]=v279;break;end end end elseif v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end elseif (v93<=66) then if (v93<=63) then if (v93<=61) then v90[v92[2]]=v90[v92[3]][v90[v92[4]]];elseif (v93>62) then if  not v90[v92[2]] then v84=v84 + 1 ;else v84=v92[3];end else local v281=0;local v282;local v283;while true do if (1==v281) then for v439=v282 + 1 ,v85 do v15(v283,v90[v439]);end break;end if (v281==0) then v282=v92[2 + 0 ];v283=v90[v282];v281=1;end end end elseif (v93<=64) then v90[v92[2]]=v92[3]/v90[v92[4]] ;elseif (v93>65) then if (v92[2]==v90[v92[4]]) then v84=v84 + 1 ;else v84=v92[3];end else v90[v92[2]]=v92[3] + v90[v92[4]] ;end elseif (v93<=69) then if (v93<=67) then local v175=v92[2];local v176={};for v198=1, #v89 do local v199=v89[v198];for v285=0, #v199 do local v286=0;local v287;local v288;local v289;while true do if (v286==0) then v287=v199[v285];v288=v287[1];v286=1;end if (1==v286) then v289=v287[2];if ((v288==v90) and (v289>=v175)) then local v464=0;while true do if (0==v464) then v176[v289]=v288[v289];v287[1]=v176;break;end end end break;end end end end elseif (v93==68) then v74[v92[3]]=v90[v92[7 -5 ]];else local v292=v92[7 -5 ];local v293,v294=v83(v90[v292](v21(v90,v292 + 1 ,v85)));v85=(v294 + v292) -1 ;local v295=0;for v353=v292,v85 do local v354=0;while true do if (v354==0) then v295=v295 + 1 ;v90[v353]=v293[v295];break;end end end end elseif (v93<=70) then v90[v92[2]]= #v90[v92[3]];elseif (v93==71) then v90[v92[861 -(814 + 45) ]]=v90[v92[3]]%v92[4] ;else v90[v92[2]]=v90[v92[7 -4 ]];end elseif (v93<=84) then if (v93<=(5 + 73)) then if (v93<=75) then if (v93<=73) then local v178=0;local v179;local v180;local v181;local v182;while true do if (v178==1) then v85=(v181 + v179) -1 ;v182=0;v178=2;end if (v178==0) then v179=v92[2];v180,v181=v83(v90[v179](v90[v179 + 1 ]));v178=1;end if (v178==2) then for v385=v179,v85 do v182=v182 + 1 ;v90[v385]=v180[v182];end break;end end elseif (v93>74) then local v299=v92[2];local v300={v90[v299](v90[v299 + 1 ])};local v301=0;for v356=v299,v92[4] do v301=v301 + 1 ;v90[v356]=v300[v301];end else v90[v92[1 + 1 ]]=v92[3]/v90[v92[889 -(261 + 624) ]] ;end elseif (v93<=76) then v90[v92[2]][v92[3]]=v90[v92[4]];elseif (v93==77) then v90[v92[2]]=v90[v92[4 -1 ]]%v90[v92[4]] ;else local v304=0;local v305;while true do if (v304==0) then v305=v92[2];v90[v305]=v90[v305](v21(v90,v305 + 1 ,v85));break;end end end elseif (v93<=81) then if (v93<=79) then local v185=0;local v186;local v187;while true do if (v185==1) then v90[v186 + 1 ]=v187;v90[v186]=v187[v92[4]];break;end if (v185==0) then v186=v92[1082 -(1020 + 60) ];v187=v90[v92[3]];v185=1;end end elseif (v93==80) then v84=v92[1426 -(630 + 793) ];else local v307=v92[2];local v308=v90[v92[3]];v90[v307 + 1 ]=v308;v90[v307]=v308[v92[4]];end elseif (v93<=82) then local v188=0;local v189;local v190;local v191;while true do if (v188==1) then v191=v90[v189 + 2 ];if (v191>0) then if (v190>v90[v189 + 1 ]) then v84=v92[3];else v90[v189 + 3 ]=v190;end elseif (v190<v90[v189 + 1 ]) then v84=v92[3];else v90[v189 + (9 -6) ]=v190;end break;end if (v188==0) then v189=v92[2];v190=v90[v189];v188=1;end end elseif (v93>83) then v90[v92[2]]=v90[v92[3]];else v90[v92[2]]=v90[v92[3]]%v92[4] ;end elseif (v93<=90) then if (v93<=87) then if (v93<=85) then do return v90[v92[2]]();end elseif (v93>86) then local v315=0;local v316;local v317;local v318;while true do if (v315==0) then v316=v81[v92[3]];v317=nil;v315=1;end if (v315==2) then for v442=1,v92[4] do v84=v84 + 1 ;local v443=v80[v84];if (v443[1]==72) then v318[v442-(3 -2) ]={v90,v443[3]};else v318[v442-1 ]={v73,v443[3]};end v89[ #v89 + (1748 -(760 + 987)) ]=v318;end v90[v92[2]]=v40(v316,v317,v74);break;end if (v315==1) then v318={};v317=v18({},{[v7("\59\140\44\223\209\1\171","\181\100\211\69\177")]=function(v445,v446) local v447=v318[v446];return v447[4 -3 ][v447[2]];end,[v7("\54\244\185\95\30\194\185\94\12\211","\58\105\171\215")]=function(v448,v449,v450) local v451=v318[v449];v451[1][v451[1 + 1 ]]=v450;end});v315=2;end end else v90[v92[2]]=v73[v92[3]];end elseif (v93<=88) then local v192=0;local v193;while true do if (v192==0) then v193=v92[2];v90[v193](v90[v193 + 1 ]);break;end end elseif (v93>89) then do return;end else for v368=v92[1915 -(1789 + 124) ],v92[3] do v90[v368]=nil;end end elseif (v93<=93) then if (v93<=91) then v90[v92[2]]();elseif (v93==92) then local v321=v92[2];v90[v321](v21(v90,v321 + 1 ,v85));else v90[v92[2]]={};end elseif (v93<=(861 -(745 + 21))) then if (v93==(33 + 61)) then v90[v92[2]]=v92[3];else local v325=0;local v326;while true do if (v325==0) then v326=v92[2];do return v21(v90,v326,v85);end break;end end end elseif (v93>(263 -167)) then local v327=0;local v328;local v329;while true do if (v327==1) then for v453=v328 + 1 ,v92[4] do v329=v329   .. v90[v453] ;end v90[v92[2]]=v329;break;end if (v327==0) then v328=v92[3];v329=v90[v328];v327=1;end end else local v330=v92[2];local v331=v90[v330 + 2 ];local v332=v90[v330] + v331 ;v90[v330]=v332;if (v331>(0 -0)) then if (v332<=v90[v330 + 1 ]) then v84=v92[3];v90[v330 + 3 ]=v332;end elseif (v332>=v90[v330 + 1 ]) then v84=v92[3];v90[v330 + 3 ]=v332;end end v84=v84 + 1 ;break;end if (0==v101) then v92=v80[v84];v93=v92[1];v101=1;end end end end;end return v40(v39(),{},v28)(...);end return vv17(),...);
